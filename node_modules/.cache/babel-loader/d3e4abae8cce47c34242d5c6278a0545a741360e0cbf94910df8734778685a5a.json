{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\pdfcropper-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { PDFDocument } from 'pdf-lib';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const [scale, setScale] = useState(1);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState(null);\n  const [isCropping, setIsCropping] = useState(false);\n  const [startPoint, setStartPoint] = useState(null);\n  const [croppedPdfBlob, setCroppedPdfBlob] = useState(null);\n  const [cropMode, setCropMode] = useState(false);\n  const overlayRef = useRef(null);\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      const url = URL.createObjectURL(file);\n      setPdfUrl(url);\n      setDimensions(null);\n      setCroppedPdfBlob(null);\n      setCropMode(false);\n    }\n  };\n  const handleMouseDown = e => {\n    if (cropMode && !isCropping) {\n      e.preventDefault();\n      const overlay = overlayRef.current;\n      const rect = overlay.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      setStartPoint({\n        x,\n        y\n      });\n      setIsCropping(true);\n\n      // Create initial selection\n      setDimensions({\n        width: 0,\n        height: 0,\n        x,\n        y\n      });\n    }\n  };\n  const handleMouseMove = e => {\n    if (cropMode && isCropping && startPoint) {\n      e.preventDefault();\n      const overlay = overlayRef.current;\n      const rect = overlay.getBoundingClientRect();\n      const currentX = e.clientX - rect.left;\n      const currentY = e.clientY - rect.top;\n      const width = currentX - startPoint.x;\n      const height = currentY - startPoint.y;\n      setDimensions({\n        width: Math.abs(width),\n        height: Math.abs(height),\n        x: width > 0 ? startPoint.x : currentX,\n        y: height > 0 ? startPoint.y : currentY\n      });\n    }\n  };\n  const handleMouseUp = e => {\n    if (isCropping) {\n      e.preventDefault();\n      setIsCropping(false);\n      setStartPoint(null);\n    }\n  };\n  const handleCrop = async () => {\n    if (!selectedFile || !dimensions) {\n      alert('Please select a PDF file and create a crop area');\n      return;\n    }\n    try {\n      const fileData = await selectedFile.arrayBuffer();\n      const pdfDoc = await PDFDocument.load(fileData);\n      const pages = pdfDoc.getPages();\n      const firstPage = pages[0];\n      const containerRect = containerRef.current.getBoundingClientRect();\n      const pdfWidth = firstPage.getWidth();\n      const pdfHeight = firstPage.getHeight();\n      const scaleFactor = pdfWidth / containerRect.width;\n      const pdfX = dimensions.x * scaleFactor;\n      const pdfY = pdfHeight - (dimensions.y + dimensions.height) * scaleFactor;\n      const pdfCropWidth = dimensions.width * scaleFactor;\n      const pdfCropHeight = dimensions.height * scaleFactor;\n      firstPage.setCropBox(pdfX, pdfY, pdfCropWidth, pdfCropHeight);\n      const modifiedPdfBytes = await pdfDoc.save();\n      const blob = new Blob([modifiedPdfBytes], {\n        type: 'application/pdf'\n      });\n      setCroppedPdfBlob(blob);\n      setCropMode(false);\n      alert('PDF cropped successfully! Click Download to save the file.');\n    } catch (error) {\n      console.error('Error cropping PDF:', error);\n      alert('Error cropping PDF. Please try again.');\n    }\n  };\n  const handleDownload = () => {\n    if (croppedPdfBlob) {\n      const url = URL.createObjectURL(croppedPdfBlob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'cropped-pdf.pdf';\n      link.click();\n      URL.revokeObjectURL(url);\n    } else {\n      alert('Please crop the PDF first before downloading.');\n    }\n  };\n  const resetCrop = () => {\n    setDimensions(null);\n    setCroppedPdfBlob(null);\n    setCropMode(false);\n  };\n  const startCrop = () => {\n    setCropMode(true);\n    setDimensions(null);\n    setCroppedPdfBlob(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PDF Crop Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".pdf\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), selectedFile && !cropMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"start-crop-btn\",\n          onClick: startCrop,\n          children: \"Start Crop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), cropMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crop-instructions\",\n        children: \"Click and drag on the PDF to select crop area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `pdf-container ${cropMode ? 'crop-mode' : ''}`,\n        ref: containerRef,\n        children: pdfUrl && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"embed\", {\n            src: pdfUrl,\n            type: \"application/pdf\",\n            className: \"pdf-preview\",\n            style: {\n              transform: `scale(${scale})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: overlayRef,\n            className: \"pdf-overlay\",\n            onMouseDown: handleMouseDown,\n            onMouseMove: handleMouseMove,\n            onMouseUp: handleMouseUp,\n            onMouseLeave: handleMouseUp,\n            children: dimensions && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selection-area\",\n              style: {\n                left: `${dimensions.x}px`,\n                top: `${dimensions.y}px`,\n                width: `${dimensions.width}px`,\n                height: `${dimensions.height}px`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [cropMode && dimensions && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCrop,\n          disabled: !selectedFile || !dimensions,\n          children: \"Apply Crop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDownload,\n          disabled: !croppedPdfBlob,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), cropMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetCrop,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"zoom-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setScale(scale + 0.1),\n            children: \"Zoom In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setScale(Math.max(0.1, scale - 0.1)),\n            children: \"Zoom Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RAimsl57ShFtMV01d62ubJDjfsg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","PDFDocument","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedFile","setSelectedFile","pdfUrl","setPdfUrl","scale","setScale","containerRef","dimensions","setDimensions","isCropping","setIsCropping","startPoint","setStartPoint","croppedPdfBlob","setCroppedPdfBlob","cropMode","setCropMode","overlayRef","handleFileChange","event","file","target","files","url","URL","createObjectURL","handleMouseDown","e","preventDefault","overlay","current","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","width","height","handleMouseMove","currentX","currentY","Math","abs","handleMouseUp","handleCrop","alert","fileData","arrayBuffer","pdfDoc","load","pages","getPages","firstPage","containerRect","pdfWidth","getWidth","pdfHeight","getHeight","scaleFactor","pdfX","pdfY","pdfCropWidth","pdfCropHeight","setCropBox","modifiedPdfBytes","save","blob","Blob","type","error","console","handleDownload","link","document","createElement","href","download","click","revokeObjectURL","resetCrop","startCrop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","onClick","ref","src","style","transform","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","disabled","max","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Downloads/pdfcropper-main/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { PDFDocument } from 'pdf-lib';\nimport './App.css';\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const [scale, setScale] = useState(1);\n  const containerRef = useRef(null);\n  const [dimensions, setDimensions] = useState(null);\n  const [isCropping, setIsCropping] = useState(false);\n  const [startPoint, setStartPoint] = useState(null);\n  const [croppedPdfBlob, setCroppedPdfBlob] = useState(null);\n  const [cropMode, setCropMode] = useState(false);\n  const overlayRef = useRef(null);\n\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      const url = URL.createObjectURL(file);\n      setPdfUrl(url);\n      setDimensions(null);\n      setCroppedPdfBlob(null);\n      setCropMode(false);\n    }\n  };\n\n  const handleMouseDown = (e) => {\n    if (cropMode && !isCropping) {\n      e.preventDefault();\n      const overlay = overlayRef.current;\n      const rect = overlay.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      \n      setStartPoint({ x, y });\n      setIsCropping(true);\n\n      // Create initial selection\n      setDimensions({\n        width: 0,\n        height: 0,\n        x,\n        y\n      });\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    if (cropMode && isCropping && startPoint) {\n      e.preventDefault();\n      const overlay = overlayRef.current;\n      const rect = overlay.getBoundingClientRect();\n      const currentX = e.clientX - rect.left;\n      const currentY = e.clientY - rect.top;\n\n      const width = currentX - startPoint.x;\n      const height = currentY - startPoint.y;\n\n      setDimensions({\n        width: Math.abs(width),\n        height: Math.abs(height),\n        x: width > 0 ? startPoint.x : currentX,\n        y: height > 0 ? startPoint.y : currentY\n      });\n    }\n  };\n\n  const handleMouseUp = (e) => {\n    if (isCropping) {\n      e.preventDefault();\n      setIsCropping(false);\n      setStartPoint(null);\n    }\n  };\n\n  const handleCrop = async () => {\n    if (!selectedFile || !dimensions) {\n      alert('Please select a PDF file and create a crop area');\n      return;\n    }\n\n    try {\n      const fileData = await selectedFile.arrayBuffer();\n      const pdfDoc = await PDFDocument.load(fileData);\n      const pages = pdfDoc.getPages();\n      const firstPage = pages[0];\n\n      const containerRect = containerRef.current.getBoundingClientRect();\n      const pdfWidth = firstPage.getWidth();\n      const pdfHeight = firstPage.getHeight();\n      \n      const scaleFactor = pdfWidth / containerRect.width;\n      \n      const pdfX = dimensions.x * scaleFactor;\n      const pdfY = pdfHeight - ((dimensions.y + dimensions.height) * scaleFactor);\n      const pdfCropWidth = dimensions.width * scaleFactor;\n      const pdfCropHeight = dimensions.height * scaleFactor;\n\n      firstPage.setCropBox(pdfX, pdfY, pdfCropWidth, pdfCropHeight);\n\n      const modifiedPdfBytes = await pdfDoc.save();\n      const blob = new Blob([modifiedPdfBytes], { type: 'application/pdf' });\n      setCroppedPdfBlob(blob);\n      setCropMode(false);\n      \n      alert('PDF cropped successfully! Click Download to save the file.');\n    } catch (error) {\n      console.error('Error cropping PDF:', error);\n      alert('Error cropping PDF. Please try again.');\n    }\n  };\n\n  const handleDownload = () => {\n    if (croppedPdfBlob) {\n      const url = URL.createObjectURL(croppedPdfBlob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'cropped-pdf.pdf';\n      link.click();\n      URL.revokeObjectURL(url);\n    } else {\n      alert('Please crop the PDF first before downloading.');\n    }\n  };\n\n  const resetCrop = () => {\n    setDimensions(null);\n    setCroppedPdfBlob(null);\n    setCropMode(false);\n  };\n\n  const startCrop = () => {\n    setCropMode(true);\n    setDimensions(null);\n    setCroppedPdfBlob(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>PDF Crop Tool</h1>\n        \n        <div className=\"input-section\">\n          <input\n            type=\"file\"\n            accept=\".pdf\"\n            onChange={handleFileChange}\n          />\n          {selectedFile && !cropMode && (\n            <button \n              className=\"start-crop-btn\" \n              onClick={startCrop}\n            >\n              Start Crop\n            </button>\n          )}\n        </div>\n\n        {cropMode && (\n          <div className=\"crop-instructions\">\n            Click and drag on the PDF to select crop area\n          </div>\n        )}\n\n        <div \n          className={`pdf-container ${cropMode ? 'crop-mode' : ''}`}\n          ref={containerRef}\n        >\n          {pdfUrl && (\n            <>\n              <embed \n                src={pdfUrl} \n                type=\"application/pdf\"\n                className=\"pdf-preview\"\n                style={{ transform: `scale(${scale})` }}\n              />\n              <div \n                ref={overlayRef}\n                className=\"pdf-overlay\"\n                onMouseDown={handleMouseDown}\n                onMouseMove={handleMouseMove}\n                onMouseUp={handleMouseUp}\n                onMouseLeave={handleMouseUp}\n              >\n                {dimensions && (\n                  <div\n                    className=\"selection-area\"\n                    style={{\n                      left: `${dimensions.x}px`,\n                      top: `${dimensions.y}px`,\n                      width: `${dimensions.width}px`,\n                      height: `${dimensions.height}px`\n                    }}\n                  />\n                )}\n              </div>\n            </>\n          )}\n        </div>\n\n        <div className=\"controls\">\n          {cropMode && dimensions && (\n            <button onClick={handleCrop} disabled={!selectedFile || !dimensions}>\n              Apply Crop\n            </button>\n          )}\n          <button onClick={handleDownload} disabled={!croppedPdfBlob}>\n            Download\n          </button>\n          {cropMode && (\n            <button onClick={resetCrop}>\n              Cancel\n            </button>\n          )}\n          <div className=\"zoom-controls\">\n            <button onClick={() => setScale(scale + 0.1)}>Zoom In</button>\n            <button onClick={() => setScale(Math.max(0.1, scale - 0.1))}>Zoom Out</button>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}